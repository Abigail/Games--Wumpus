#!/usr/bin/perl

use 5.010;

use strict;
use warnings;
no  warnings 'syntax';

use Games::Wumpus;

sub prompt;
sub read_command;
sub cmd_move;
sub cmd_shoot;
sub cmd_help;

our $DEBUG = 1;

my $game = Games::Wumpus -> new -> init;

while (!defined $game -> finished) {
    print $game -> describe;

    prompt;
    my ($cmd, @args) = read_command;

    given ($cmd) {
        when ("Q") {
            say "Eventually, the Wumpus gets you.";
            $game -> lose;
        }
        when ("M") {
            cmd_move @args;
        }
        when ("S") {
            cmd_shoot @args;
        }
        when (/[H?]/) {
            cmd_help;
        }
        default {
            say "Unknown command. Type ? for help.";
        }
    }
}

given ($game -> finished) {
    when (0) {say "You lost the game."; exit 1}
    when (1) {say "You won the game.";  exit 0}
    default  {say "Impossible."; exit 255}
}


sub prompt {
    print "command > ";
}

sub read_command {
    my $line = <>;
    chomp $line;
    $line =~ s/^\s+//;
    my ($cmd, @args) = split ' ', $line;
    $cmd = uc substr $cmd, 0, 1;
    ($cmd, @args);
}

sub cmd_move  {
    my @args = @_;
    if (@args != 1 || $args [0] !~ /^[0-9]+$/) {
        say "Usage M <number>";
    }
    else {
        my ($r, @mess) = $game -> move ($args [0]);
        say for @mess;
    }
}


sub cmd_shoot {
    my @args = @_;
    if (@args < 1 || @args > 5 || grep {$_ !~ /^[0-9]+$/} @args) {
        say "Usage S <number> {1,5}";
    }
    else {
        my ($r, @mess) = $game -> shoot (@args);
        say for @mess;
    }
}




sub cmd_help  {print <<'--'}
 Welcome to Hunt the Wumpus!

 You found yourself in a cave system, consisting of rooms, tunnels between
 the rooms, a Wumpus, bats and bottomless pits. You are equipped with
 a couple of crooked arrows, and your goal is to shoot the Wumpus before
 it eats you.

 In each room, you have two options: either you move to an adjacent room,
 or you shoot an arrow. To move to another room, type 'M', a space, and
 the room you like to move to (there must be a tunnel from your current
 room to the room you want to move to). To shoot an arrow, type 'S', a 
 space, and a list (space separated) of rooms you want to arrow to move
 through (1-5 rooms). If the arrow hits the Wumpus, you win the game.
 Otherwise, you may wake up the Wumpus, causing him to move. If he finds
 you, he'll eat you.

 If you enter a room containing a pit, you fall in the pit and you die.
 If you enter a room containing a bat, the bat will pick you up, and drop
 you in a random location. 

 If you are in a room and there's a Wumpus, a pit, or a bat nearby, I'll
 drop a hint.

 Success!
--


__END__

=head1 NAME

wumpus

=head1 SYNOPSIS

=head1 DESCRIPTION

=head1 BUGS

=head1 TODO

=head1 SEE ALSO

=head1 DEVELOPMENT

The current sources of this module are found on github,
L<< git://github.com/Abigail/games--wumpus.git >>.

=head1 AUTHOR

Abigail, L<< mailto:cpan@abigail.be >>.

=head1 COPYRIGHT and LICENSE

Copyright (C) 2009 by Abigail.

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the "Software"),   
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
THE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT
OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

=head1 INSTALLATION

To install this module, run, after unpacking the tar-ball, the 
following commands:

   perl Makefile.PL
   make
   make test
   make install

=cut
